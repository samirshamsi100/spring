apiVersion: v1
kind: Deployment
metadata:
  name: ${project.artifactId}
spec:
  template:
    spec:
      initContainers:
        - env:
            - name: ca_bundle
              value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
            - name: truststore_jks
              value: /var/run/secrets/java.io/keystores/truststore.jks
            - name: password
              value: changeit    
          name: pem-to-truststore
          image: registry.access.redhat.com/redhat-sso-7/sso71-openshift:1.1-16
          command: ['/bin/bash']
          args: ['-c', "csplit -z -f crt- $ca_bundle '/-----BEGIN CERTIFICATE-----/' '{*}' && for file in crt-*; do keytool -import -noprompt -keystore $truststore_jks -file $file -storepass changeit -alias service-$file; done"]
          volumeMounts:
            - name: keystore-volume
              mountPath: /var/run/secrets/java.io/keystores  
      containers:
        - env:
            - name: JAVA_OPTIONS
              value: -Dspring.profiles.active=openshift -Djavax.net.ssl.trustStore=/var/run/secrets/java.io/keystores/truststore.jks -Djavax.net.ssl.trustStorePassword=changeit
          volumeMounts:
            - name: keystore-volume
              mountPath: /var/run/secrets/java.io/keystores  
#            - name: DB_USERNAME
#              valueFrom:
#                 secretKeyRef:
#                   name: my-database-secret
#                   key: user
#            - name: DB_PASSWORD
#              valueFrom:
#                 secretKeyRef:
#                   name: my-database-secret
#                   key: password
#        - volumeMounts:
#            - name: keystore-volume
#              mountPath: /var/run/secrets/java.io/keystores 
      volumes:
        - name: keystore-volume
          emptyDir: {}    
